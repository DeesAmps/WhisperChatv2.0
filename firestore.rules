rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 1) Public keys remain open for read; only owner can write
    match /publicKeys/{userId} {
      allow read;
      allow write: if request.auth != null
                   && request.auth.uid == userId;
    }

    // 2) Conversations
    match /conversations/{convId} {
      // Creation: include yourself
      allow create: if request.auth != null
                    && request.resource.data.participants
                         .contains(request.auth.uid);

      // ✅ Pending‑list (dashboard): you must be in participants AND approved == false
      allow list: if request.auth != null
                  && resource.data.participants
                        .contains(request.auth.uid)
                  && resource.data.approved[request.auth.uid] == false;

      // ✅ Chat‑view (single get): you must be in participants AND approved == true
      allow get: if request.auth != null
                 && resource.data.participants
                      .contains(request.auth.uid)
                 && resource.data.approved[request.auth.uid] == true;

      // Approving / other updates: only participants
      allow update: if request.auth != null
                    && resource.data.participants
                         .contains(request.auth.uid);

      // Subcollection of messages
      match /messages/{msgId} {
        // List/read messages only for approved conversations
        allow read: if request.auth != null
                     && get(
                          /databases/$(database)/documents/conversations/$(convId)
                        ).data.approved[request.auth.uid] == true;
        // Send a message only if approved
        allow create: if request.auth != null
                      && get(
                           /databases/$(database)/documents/conversations/$(convId)
                         ).data.approved[request.auth.uid] == true;
      }
    }
  }
}
