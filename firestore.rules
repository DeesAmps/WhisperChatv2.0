rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Public keys: anyone can read; only owner can write
    match /publicKeys/{userId} {
      allow read;
      allow write: if request.auth != null
                   && request.auth.uid == userId;
    }

    // Conversations metadata
    match /conversations/{convId} {
      // Creation: you must include yourself
      allow create: if request.auth != null
                    && request.auth.uid in request.resource.data.participants;

      // Read the conversation doc only if you’re an approved participant
      allow get: if request.auth != null
                 && request.auth.uid in resource.data.participants
                 && resource.data.approved[request.auth.uid] == true;

      // Approve (update) only if you’re a participant
      allow update: if request.auth != null
                    && request.auth.uid in resource.data.participants;

      // Messages subcollection
      match /messages/{messageId} {
        // List & get messages only if you’re approved
        allow list, get: if request.auth != null
                         && get(
                              /databases/$(database)/documents/conversations/$(convId)
                            ).data.approved[request.auth.uid] == true
                         && request.auth.uid
                            in get(
                                 /databases/$(database)/documents/conversations/$(convId)
                               ).data.participants;

        // Send a message only if you’re approved
        allow create: if request.auth != null
                      && get(
                           /databases/$(database)/documents/conversations/$(convId)
                         ).data.approved[request.auth.uid] == true
                      && request.auth.uid
                         in get(
                              /databases/$(database)/documents/conversations/$(convId)
                            ).data.participants;
      }
    }
  }
}
